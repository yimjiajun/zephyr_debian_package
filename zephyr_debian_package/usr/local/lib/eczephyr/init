#!/bin/bash

lib_path="$(dirname $(readlink -f $0))"
prj_path=

function command_check {
	local sup_cmd=('-h' 'help' \
		'-d' '-p')
	local sup_cmd_expansion=('--dir' \
		'--project')
	local len=${#sup_cmd[*]}

	for((i = 0; i < len; i++)); do
		[[ "$1" == "${sup_cmd[$i]}" ]] &&\
			return 0
	done

	len=${#sup_cmd_expansion[*]}

	for((i = 0; i < len; i++)); do
		[[ "$1" == "${sup_cmd_expansion[$i]}"* ]] &&\
			return 0
	done

	return 1;
}

function process_input {
	while [[ "$#" -gt 0 ]]; do
		command_check $1;

		if [ "$?" -gt 0 ] && [ "$#" -ne 1 ]; then
			echo -e "\033[1;31m'$1' input parameter is unrecognized\033[0m" >&2
			return 1
		fi

		case "$1" in
			'-d'|"--dir="*)
				if [ "$1" = "--dir="* ]; then
					echo "empty" >&1
				else
					if [ -z "$2" ] || [[ "$2" = "-"* ]]; then
						echo -e "\033[1;31mNo target project path!\033[0m" >&2
						return 1
					fi

					prj_path="$2"
					shift

					if [ -d "${prj_path}" ]; then
						echo -e "\033[1;31mProvided non-exist directory!\033[0m" >&2
						return 1
					fi
				fi
				;;
			'-h'|'--help')
				${lib_path}/help "install"
				exit 0
				;;
			'-p'|'--project=')
				if [[ "$1" = "--project="* ]]; then
					echo "empty" >&1
				else
					if [ -z "$2" ] || [[ "$2" = "-"* ]]; then
						echo -e "\033[1;31mNo target project name!\033[0m" >&2
						return 1
					fi

					prj_name="$2"
					shift
				fi
				;;
			*)
				if [ "$#" -ne 1 ]; then
					echo -e "\033[1;31mUnknow parameter $1\033[0m" >&2
					return 1
				fi

				if [ ! -z "${prj_path}" ]; then
					echo -e "\033[1;31mProject been selectes as ${prj_path}\033[0m" >&2
					return 0
				fi

				if [ ! -d "$1" ]; then
					echo -e "\033[1;31mProvided non-exist directory!\033[0m" >&2
					return 1
				fi

				prj_path="$1"
				;;
		esac

		shift
	done

	return 0
}

function project_selection {

	# if [ -z "${prj_name} ]; then
	#
	# fi

	return 0
}

process_input $@; [ "$?" -gt 0 ] && exit 1
